/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doanspammail;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author tinh
 */
public class SpamMail extends javax.swing.JFrame {

    /**
     * Creates new form SpamMail
     */
    public SpamMail() {
        initComponents();
//        jLabel1.setVisible(false);
//        jLabel2.setVisible(false);
//        jTextField2.setVisible(false);
//        jTextField3.setVisible(false);
//        jButton3.setVisible(false);
//        jButton2.setVisible(false);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnTest = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        btnDanhGia = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnRemoveStopWord = new javax.swing.JButton();
        btnLemmatization = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jPanel3 = new javax.swing.JPanel();
        btnOpen = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        btnCheck = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jCB = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        btnHam = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        btnSpam = new javax.swing.JButton();
        btnLoad = new javax.swing.JButton();
        btnLoad2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Đánh giá", 0, 0, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        btnTest.setText("...");
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        jLabel3.setText("Test Folder");

        jTextField1.setEnabled(false);

        jScrollPane3.setViewportView(jTextPane3);

        btnDanhGia.setText("Đánh giá");
        btnDanhGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDanhGiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1)
                        .addGap(18, 18, 18)
                        .addComponent(btnTest, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(btnDanhGia)
                .addGap(129, 129, 129))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTest)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDanhGia)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rút trích đặc trưng", 0, 0, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        btnRemoveStopWord.setText("Remove Stopword");
        btnRemoveStopWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveStopWordActionPerformed(evt);
            }
        });

        btnLemmatization.setText("Lemmatization");
        btnLemmatization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLemmatizationActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jTextPane2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnRemoveStopWord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLemmatization, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveStopWord)
                    .addComponent(btnLemmatization))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Kiểm tra mail", 0, 0, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        btnOpen.setText("Chọn tập tin");
        btnOpen.setName("btnOpenFile"); // NOI18N
        btnOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOpenMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(jTextPane1);

        btnCheck.setText("Kiểm tra");
        btnCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCheckMouseClicked(evt);
            }
        });

        btnAdd.setText("Thêm vào CSDL");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addComponent(btnOpen))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCheck)
                    .addComponent(btnAdd)
                    .addComponent(jLabel4))
                .addGap(20, 20, 20))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Load dữ liệu", 0, 0, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(102, 102, 102))); // NOI18N

        jCB.setText("Chọn tập huấn luyện riêng");
        jCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCBMouseClicked(evt);
            }
        });

        jLabel1.setText("Ham Folder");
        jLabel1.setEnabled(false);

        jTextField2.setEnabled(false);

        btnHam.setText("...");
        btnHam.setEnabled(false);
        btnHam.setName("btnEmailSpam"); // NOI18N
        btnHam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHamMouseClicked(evt);
            }
        });

        jLabel2.setText("Spam Folder");
        jLabel2.setEnabled(false);

        jTextField3.setEnabled(false);

        btnSpam.setText("...");
        btnSpam.setEnabled(false);
        btnSpam.setName("btnEmailHam"); // NOI18N
        btnSpam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSpamMouseClicked(evt);
            }
        });

        btnLoad.setText("Load dữ liệu có sẵn");
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnLoad2.setText("Load dữ liệu đã chọn");
        btnLoad2.setEnabled(false);
        btnLoad2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoad2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCB)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2)))
                        .addGap(18, 18, 18)
                        .addComponent(btnHam, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 11, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnLoad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLoad2))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSpam, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCB)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHam)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSpam)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoad)
                    .addComponent(btnLoad2))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ArrayList<String> listWordHam;//list word ham
    ArrayList<String> listWordSpam;//list word spam
    ArrayList<String> listWordInput = new ArrayList<String>();//list word input
    ArrayList<String> listWordFull;//list word full
    int numFileHam;//Số lượng file Ham
    int numFileSpam;//Số lượng file Spam
    int numFileTest;//Số lượng file test
    String textHam = "";//Nội dung tất cả các file Ham
    String textSpam = "";//Nội dung tất cả các file Spam
    String textInput = "";//Nội dung file Input
    String dirHam;//Đường dẫn tới thư mục chứa các file Ham
    String dirSpam;//Đường dẫn tới thư mục chứa các file Spam
    String dirTest;//Đường dẫn tới thư mục chứa các file Test
    String inputName;//Tên file Input
    String filePath;//đường dẫn tuyệt đối file Input
    String kq;//Kết quả check file Input là Ham hay Spam
    String sHam[] = new String[numFileHam];
    String sSpam[] = new String[numFileSpam];
    ArrayList<String> Stopword = new ArrayList<String>();


    private void btnOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOpenMouseClicked
        Processing p = new Processing();
        JFileChooser c = new JFileChooser();
        int rVal = c.showOpenDialog(null);
        String dir = c.getCurrentDirectory().toString();//lấy đường dẫn
        //String filePath = c.getCurrentDirectory().getName().toString();//đường dẫn của file
        inputName = c.getSelectedFile().getName();
        filePath = dir + "\\" + c.getSelectedFile().getName();//đường dẫn của file
        //ArrayList<String> listWord = new ArrayList<String>();//list word             
        if (rVal == JFileChooser.APPROVE_OPTION) {
            //String filename = c.getSelectedFile().getName();                     
            try {
                textInput = p.ReadFile(filePath);
                jTextPane1.setText("\r\n" + textInput);
                listWordInput = p.SplitText(textInput);
                listWordInput = p.RemoveDuplicate(listWordInput);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnOpenMouseClicked

    //Xử lí ngữ liệu huấn luyện HAM
    private void btnHamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHamMouseClicked
        // TODO add your handling code here:
        Processing p = new Processing();
        JFileChooser c = new JFileChooser();
        //int rVal = c.showOpenDialog(null);
        c.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int rVal = c.showDialog(null, null);
        dirHam = c.getSelectedFile().getAbsolutePath().toString();
        //String dir = c.getCurrentDirectory().getAbsolutePath().toString();//lấy đường dẫn
        //jTextField2.setText(dir);

        //listWord = p.SplitText(dir,text);
//        File folder = new File(dirHam);
//        File[] listOfFiles = folder.listFiles();
//
//        numFileHam = 0;
//
//        for (File file : listOfFiles) {
//            if (file.isFile()) {
//                try {
//                    numFileHam++;//Số file trong thư mục Ham
//                    textHam += p.ReadFile(dirHam + "\\" + file.getName());
//                    //listWord = p.SplitText(text);
//                } catch (FileNotFoundException ex) {
//                    Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        }
//        listWordHam = p.SplitText(textHam);
        jTextField2.setText(dirHam);
        //jButton3.setEnabled(true);
    }//GEN-LAST:event_btnHamMouseClicked

    //Xử lí ngữ liệu huấn luyện SPAM
    private void btnSpamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSpamMouseClicked
        // TODO add your handling code here:
        Processing p = new Processing();
        JFileChooser c = new JFileChooser();
        //int rVal = c.showOpenDialog(null);
        c.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int rVal = c.showDialog(null, null);
        dirSpam = c.getSelectedFile().getAbsolutePath().toString();
        //String dir = c.getCurrentDirectory().getAbsolutePath().toString();//lấy đường dẫn
//        File folder = new File(dirSpam);
//        File[] listOfFiles = folder.listFiles();
//
//        numFileSpam = 0;
//        for (File file : listOfFiles) {
//            if (file.isFile()) {
//                try {
//                    numFileSpam++;//Số file trong thư mục Spam                 
//                    textSpam = textSpam + p.ReadFile(dirSpam + "\\" + file.getName());
//                    //listWord = p.SplitText(text);
//                } catch (FileNotFoundException ex) {
//                    Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        }
//        listWordSpam = p.SplitText(textSpam);
//        for (String item : listWordSpam) {
//            if (Stopword.contains(item) == true) {
//                listWordFull.remove(item);
//            }
//        }

        jTextField3.setText(dirSpam);
        //jButton1.setEnabled(true);
    }//GEN-LAST:event_btnSpamMouseClicked

    private void btnCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCheckMouseClicked
        // TODO add your handling code here:
        Processing p = new Processing();

        if(p.check(listWordInput, listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam)==0){
            jLabel4.setText("Không phải thư rác!");
        } 
        else{
            jLabel4.setText("Là thư rác!");
        } 
//        double tp = p.precision(dirHam, "Ham", listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam)
//                + p.precision(dirSpam, "Spam", listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam);
        double tp = p.precision(dirSpam, "Spam", listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam);
        double precision = (double) tp / (numFileSpam);

        //double fn = numFileHam - p.precision(dirSpam, "Ham", listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam);
        //double recall = (double) fn / (numFileHam);
        //double Fmeasure = (double) (2*precision*recall/(precision+recall));
        //jTextPane2.setText(jTextPane2.getText() + "\r\nĐộ Chính Xác:" + precision * 100 + "%");
        //jTextPane2.setText(jTextPane2.getText() + "\r\nĐộ Phủ:" + recall * 100 + "%");
        //jTextPane2.setText(jTextPane2.getText() + "\r\nF-measure:" + Fmeasure);
        //jButton5.setEnabled(true);
//        try {
//            p.WriteFile(".\\result\\Ham.txt", listWordHam);
//        } catch (IOException ex) {
//            Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnCheckMouseClicked

    private void jCBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBMouseClicked
        // TODO add your handling code here:
        if (jCB.isSelected() == true) {
            jLabel1.setEnabled(true);
            jLabel2.setEnabled(true);
            jTextField2.setEnabled(true);
            jTextField3.setEnabled(true);
            btnSpam.setEnabled(true);
            btnHam.setEnabled(true);
            btnLoad.setEnabled(false);
            btnLoad2.setEnabled(true);
        } else {
            jLabel1.setEnabled(false);
            jLabel2.setEnabled(false);
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
            btnSpam.setEnabled(false);
            btnHam.setEnabled(false);
            btnLoad.setEnabled(true);
            btnLoad2.setEnabled(false);
        }
    }//GEN-LAST:event_jCBMouseClicked

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        // TODO add your handling code here:
        Processing p = new Processing();
        listWordHam = new ArrayList<String>();//list word ham
        listWordSpam = new ArrayList<String>();//list word spam
        listWordFull = new ArrayList<String>();//list word full
        dirHam = ".\\data\\Ham";//Đường dẫn tới thư mục chứa các file Ham
        dirSpam = ".\\data\\Spam";//Đường dẫn tới thư mục chứa các file Spam
        listWordHam = p.loadData(dirHam);
        listWordSpam = p.loadData(dirSpam);
        for (String item : listWordHam) {
            listWordFull.add(item);
        }
        for (String item : listWordSpam) {
            listWordFull.add(item);
        }
        listWordFull = p.RemoveDuplicate(listWordFull);
        numFileHam = p.countFile(dirHam);
        numFileSpam = p.countFile(dirSpam);
        try {
            p.WriteFile(".\\result\\Ham.txt", listWordHam);
            p.WriteFile(".\\result\\Spam.txt", listWordSpam);
            p.WriteFile(".\\result\\Full.txt", listWordFull);
            //p.WriteFile(".\\result\\Full.txt", listWordFull);
        } catch (IOException ex) {
            Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextPane2.setText("Tổng số đặc trưng: " + Integer.toString(listWordFull.size()));
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnLoad2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoad2ActionPerformed
        // TODO add your handling code here:
        Processing p = new Processing();
        
        listWordHam = new ArrayList<String>();//list word ham
        listWordSpam = new ArrayList<String>();//list word spam
        listWordFull = new ArrayList<String>();//list word full
        
        listWordHam = p.loadData(dirHam);
        listWordSpam = p.loadData(dirSpam);
        
        for (String item : listWordHam) {
            listWordFull.add(item);
        }
        for (String item : listWordSpam) {
            listWordFull.add(item);
        }
        listWordFull = p.RemoveDuplicate(listWordFull);
        numFileHam = p.countFile(dirHam);
        numFileSpam = p.countFile(dirSpam);
        jTextPane2.setText("Tổng số đặc trưng: " + Integer.toString(listWordFull.size()));
//        try {
//            p.WriteFile(".\\result\\Ham.txt", listWordHam);
//            p.WriteFile(".\\result\\Spam.txt", listWordSpam);
//            //p.WriteFile(".\\result\\Full.txt", listWordFull);
//        } catch (IOException ex) {
//            Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnLoad2ActionPerformed

    private void btnRemoveStopWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveStopWordActionPerformed
        // TODO add your handling code here:
        Processing p = new Processing();
        FileInputStream fis;
        try {
            fis = new FileInputStream(".\\StopWord\\StopWord.txt");
            Scanner scanner = new Scanner(fis);
            while (scanner.hasNextLine()) {
                //str = str + "\r\n" + scanner.nextLine();
                Stopword.add(scanner.nextLine());
            }
            scanner.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (String item : listWordHam) {
            if (Stopword.contains(item)) {
                listWordFull.remove(item);
            }
        }
        for (String item : listWordSpam) {
            if (Stopword.contains(item)) {
                listWordFull.remove(item);
            }
        }       
        jTextPane2.setText(jTextPane2.getText() + "\r\nTổng số đặc trưng sau khi xóa Stopword: " + Integer.toString(listWordFull.size()));
//        try {
//            p.WriteFile(".\\result\\Full2.txt", listWordFull);
//        } catch (IOException ex) {
//            Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnRemoveStopWordActionPerformed

    private void btnLemmatizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLemmatizationActionPerformed
        // TODO add your handling code here:
        Processing p = new Processing();
        for(String item : listWordFull){
            try {
                listWordFull.set(listWordFull.indexOf(item), p.lemmatization(item));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        listWordFull = p.RemoveDuplicate(listWordFull);
        jTextPane2.setText(jTextPane2.getText() + "\r\nTổng số đặc trưng sau Lemmatization: " + Integer.toString(listWordFull.size()));
    }//GEN-LAST:event_btnLemmatizationActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        try {

            if (kq == "Ham") {
                File file = new File(dirHam + "\\" + inputName);
                FileWriter writer = new FileWriter(file);
                writer.write(textInput);
                writer.close();

            } else {
                File file = new File(dirSpam + "\\" + inputName);
                FileWriter writer = new FileWriter(file);
                writer.write(textInput);
                writer.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(SpamMail.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        // TODO add your handling code here:
        JFileChooser c = new JFileChooser();
        //int rVal = c.showOpenDialog(null);
        c.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int rVal = c.showDialog(null, null);
        dirTest = c.getSelectedFile().getAbsolutePath().toString();
        jTextField1.setText(dirTest);
    }//GEN-LAST:event_btnTestActionPerformed

    private void btnDanhGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDanhGiaActionPerformed
        // TODO add your handling code here:
        Processing p = new Processing();
        numFileTest = p.countFile(dirTest);
        double tp = p.precision(dirTest, "Spam", listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam);
        double precision = (double) (tp / (numFileTest));
        jTextPane3.setText("Độ chính xác: " + Double.toString(precision));
        //double fn = numFileHam - p.precision(dirTest, "Ham", listWordFull, listWordHam, listWordSpam, numFileHam, numFileSpam);
        //double recall = (double) fn / (numFileTest);
        //double Fmeasure = (double) (2*precision*recall/(precision+recall));
        //jTextPane2.setText(jTextPane2.getText() + "\r\nĐộ Chính Xác:" + precision * 100 + "%");
        //jTextPane2.setText(jTextPane2.getText() + "\r\nĐộ Phủ:" + recall * 100 + "%");
        //jTextPane2.setText(jTextPane2.getText() + "\r\nF-measure:" + Fmeasure);
        //jButton5.setEnabled(true);
    }//GEN-LAST:event_btnDanhGiaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpamMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpamMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpamMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpamMail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SpamMail().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnDanhGia;
    private javax.swing.JButton btnHam;
    private javax.swing.JButton btnLemmatization;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnLoad2;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnRemoveStopWord;
    private javax.swing.JButton btnSpam;
    private javax.swing.JButton btnTest;
    private javax.swing.JCheckBox jCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    // End of variables declaration//GEN-END:variables
}
